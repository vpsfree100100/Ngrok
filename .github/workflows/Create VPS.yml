name: Create VPS (Auto-Restart & Safe + Playit SSH)

on:
  workflow_dispatch:
  repository_dispatch:
    types: [create-vps]

jobs:
  start-vps:
    runs-on: ubuntu-latest
    timeout-minutes: 360  # 6 hours

    steps:
      - name: ⬇️ Checkout
        uses: actions/checkout@v3

      - name: 📁 Prepare dirs
        run: mkdir -p links .backup

      - name: 💾 Restore backup (optional)
        run: |
          name="${{ github.event.client_payload.vps_name || 'manual-vps' }}"
          if [ "${{ github.event.client_payload.backup }}" == "true" ]; then
            echo "Restoring backup for $name..."
            unzip ".backup/$name.zip" -d . || echo "⚠️ No backup found."
          fi

      - name: 🔑 Set password for runner
        run: echo "runner:passwordvps" | sudo chpasswd

      - name: 🔐 Start tmate session
        run: |
          sudo apt update -y && sudo apt install -y tmate
          tmate -S /tmp/tmate.sock new-session -d
          tmate -S /tmp/tmate.sock wait tmate-ready
          SSH=$(tmate -S /tmp/tmate.sock display -p '#{tmate_ssh}')
          echo "$SSH" | tee "links/${{ github.event.client_payload.vps_name || 'manual-vps' }}-tmate.txt"

      - name: 📦 Install jq and Playit
        run: |
          sudo apt update -y
          sudo apt install -y jq
          curl -sSL https://playit.gg/install.sh | bash

      - name: 🚪 Start Playit tunnel for SSH
        env:
          PLAYIT_TOKEN: ${{ secrets.PLAYIT_TOKEN }}
        run: |
          # Start Playit tunnel for port 22 (SSH)
          playit tunnel --token "$PLAYIT_TOKEN" --port 22 --name "SSH Tunnel" &

          # Tunggu Playit up (maks 20 detik)
          sleep 5

          # Ambil URL Playit
          PLAYIT_URL=$(curl -s http://localhost:8080/tunnels | jq -r '.tunnels[0].public_url')
          if [ -z "$PLAYIT_URL" ]; then
            echo "❌ Playit tunnel gagal dibuat."
            exit 1
          fi
          echo "Playit SSH URL: $PLAYIT_URL"
          echo "$PLAYIT_URL" | tee "links/${{ github.event.client_payload.vps_name || 'manual-vps' }}-playit.txt"

      - name: 📦 Save backup (user data only)
        run: |
          name="${{ github.event.client_payload.vps_name || 'manual-vps' }}"
          zip -r ".backup/$name.zip" . \
            -x "/usr/*" "/bin/*" "/lib/*" "/lib64/*" "/sbin/*" "/etc/*" "/var/*" \
            ".git/*" ".github/*" ".backup/*" || true

      - name: 📤 Push updated files
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "🔁 Updated SSH + backup for ${{ github.event.client_payload.vps_name || 'manual-vps' }}"
          file_pattern: 'links/*.txt .backup/*.zip'

      - name: ⏳ Keep VPS alive (POSIX-safe loop)
        run: |
          i=1
          while [ $i -le 360 ]; do
            echo "🟢 Running minute $i/360..."
            command sleep 60 || break
            i=$((i+1))
          done

      - name: 🔁 Restart workflow automatically
        if: always()
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.RESTART_TOKEN }}" \
            -H "Content-Type: application/json" \
            https://api.github.com/repos/${{ github.repository }}/dispatches \
            -d '{"event_type": "create-vps", "client_payload": {"vps_name": "manual-vps", "backup": true}}'
